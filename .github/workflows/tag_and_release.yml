---
name: Tag and create release
on:  # yamllint disable-line rule:truthy
  pull_request:
    # Trigger only after closing a PR on the master branch
    # Accept only merged PR (see later)
    types:
      - closed
    # Trigger on:
    branches:
      - main

jobs:
  release_on_merge:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the code
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      # Step 2: Get version
      - name: Get version
        run: |
          VERSION="$(grep -Eo -m 1 '([0-9]+\.){2}[0-9]+' ./version)
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 3: Tag the commit
      - name: Create tag
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag -a "v$VERSION" -m "Release v$VERSION"
          git push --follow-tags

      # Step 4: Pack everything in both a zip and a tar.gz
      - name: Create tarball
        run: |
          git ls-files --recurse-submodules > filelist.txt
          tar -czf playground.tar.gz -T filelist.txt
          zip -@ playground.zip < filelist.txt
        shell: bash

      # Step 5: Deploy to gh-pages
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "v$VERSION"
          release_name: "playground v$VERSION ($(date +%Y-%m-%d))"
          draft: false
          prerelease: false

      # Step 6: Upload tarball
      - name: Upload .tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./playground.tar.gz
          asset_name: playground.tar.gz
          asset_content_type: application/gzip

      # Step 7: Upload tarball (zip)
      - name: Upload .zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./playground.zip
          asset_name: playground.zip
          asset_content_type: application/zip
